using Contracts;
using SecurityManager;
using System;
using System.Collections.Generic;
using System.Linq;
using System.ServiceModel;
using System.Text;
using System.Threading.Tasks;

namespace Client
{
    public class WCFClient2 : ChannelFactory<IMallware>, IMallware, IDisposable
    {
        IMallware factory;
        public WCFClient2(NetTcpBinding binding, EndpointAddress address)
            : base(binding, address)
        {
            factory = this.CreateChannel();
        }
        public string AddProcess(string process)
        {
            try
            {
                return factory.AddProcess(process);
            } 
            catch (Exception e)
            {
                Console.WriteLine("Error while trying to Add : {0}", e.Message);
            }
            return "Error while trying to Add!";
        }

		public List<string> ReadConfiguration()
		{
            try
            {
                return factory.ReadConfiguration();
            }
            catch (Exception e)
            {
                Console.WriteLine("Error while trying to Read : {0}", e.Message);
            }
            return new List<string>();
		}

		public string ModifyProcess(string processOld, string processNew)
		{
            try
            {
                return factory.ModifyProcess(processOld, processNew);
            }
            catch (Exception e)
            {
                Console.WriteLine("Error while trying to Modify : {0}", e.Message);
            }
            
            return "Error while trying to Modify!";
            
		}

		public string RemoveProcess(string process)
		{
            try
            {
                return factory.RemoveProcess(process);
            }
            catch (Exception e)
            {
                Console.WriteLine();
                Console.WriteLine("Error while trying to Remove : {0}", e.Message);
                return "Error while trying to Remove : " + e.Message;
            }
        }

		public string DeleteConfigurationFile()
		{
            try
            {
                return factory.DeleteConfigurationFile();
            }
            catch (Exception e)
            {
                Console.WriteLine("Error while trying to DeleteConfigurationFile : {0}", e.Message);
            }
            return "Error while trying to DeleteConfigurationFile!";
        }

        public List<string> GetMalwareProcesses()
        {
            return factory.GetMalwareProcesses();
        }
    }
}
