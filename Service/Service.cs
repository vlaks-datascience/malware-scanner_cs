using Contracts;
using DataModels;
using SecurityManager;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Security.Permissions;
using System.ServiceModel;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace Service
{
    public class Service : IService
    {
        public static RolesConfig rc = new RolesConfig();

        public void LogUnauthorizedProcess(string message, byte[] sign)
        {
            //kad je u pitanju autentifikacija putem Sertifikata
            string clientName = FormatterForCert.ParseNameForCert(ServiceSecurityContext.Current.PrimaryIdentity.Name);

            string clientNameSign = clientName + "_sign";
            X509Certificate2 certificate = CertManager.GetCertificateFromStorage(StoreName.TrustedPeople,
                StoreLocation.LocalMachine, clientNameSign);

            // OVO JE PRIMLJENA PORUKA
            /// Verify signature using SHA1 hash algorithm
            if (DigitalSignature.Verify(message, HashAlgorithm.SHA1, sign, certificate))
            {
                //Console.WriteLine("Sign is valid");
                Console.WriteLine("Malware Scanner: " + message);
                Audit.ProcessLogFromMS(message);
            }
            else
            {
                Console.WriteLine("Sign is invalid");
            }
        }
    }
}
