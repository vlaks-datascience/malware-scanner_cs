using System;
using System.Collections.Generic;
using System.Linq;
using System.ServiceModel;
using System.Text;
using System.Threading.Tasks;

namespace SecurityManager
{
    public class CustomAuthorizationManager : ServiceAuthorizationManager
    {

        protected override bool CheckAccessCore(OperationContext operationContext)
        {
            // Provera permisije iz principala koji smo podesili na kontekst
            CustomPrincipal principal = operationContext.ServiceSecurityContext.
                AuthorizationContext.Properties["Principal"] as CustomPrincipal;

            bool retVal = principal.IsInRole("Read");

            if (!retVal)
            {
                try
                {
                    Audit.AuthorizationFailed(Formatter.ParseName(principal.Identity.Name),
                        operationContext.IncomingMessageHeaders.Action,
                        "Read permission is needed.");
                }
                catch (Exception e)
                {
                    Console.WriteLine(e.Message);
                }
                
            }

            return retVal;
        }
    }
}
